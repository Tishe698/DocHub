import React, {useState} from 'react';
import {View, Text, TextInput, Button, TouchableOpacity, ScrollView, SafeAreaView, StatusBar} from 'react-native';
import styles from './style_oxy';
const Calc_max_time_o2 = () => {
    const [volume, setVolume] = useState('');
    const [pressure, setPressure] = useState('');
    const [selectedUnit, setSelectedUnit] = useState('ATM'); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã
    const [flowRate, setFlowRate] = useState('');
    const [result, setResult] = useState(null);

    const calculateTime = () => {
        if (volume && pressure && flowRate) {
            let pressureValue = parseFloat(pressure);
            if (selectedUnit === 'MPa') {
                pressureValue *= 10; // –£–º–Ω–æ–∂–∞–µ–º –Ω–∞ 10, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω—ã –º–µ–≥–∞–ø–∞—Å–∫–∞–ª–∏
            }
            const time = (parseFloat(volume) * pressureValue) / parseFloat(flowRate);
            setResult(Math.floor(time)); // –û–∫—Ä—É–≥–ª–µ–Ω–∏–µ –¥–æ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞
        }
    };
    const resetFields = () => {
        setVolume('');
        setPressure('');
        setSelectedUnit('ATM');
        setFlowRate('');
        setResult(null);
    };

    return (
        <SafeAreaView style={styles.container_2}>
            <StatusBar barStyle="dark-content" backgroundColor="#f8fbff" />
            <ScrollView contentContainerStyle={[styles.scrollViewContent, { paddingBottom: 32 }]}>
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
                <Text style={styles.header}>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –∏–Ω–≥–∞–ª—è—Ü–∏–∏</Text>

                {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
                <Text style={styles.subtitle}>
                    –†–∞—Å—á–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∫–∏—Å–ª–æ—Ä–æ–¥–æ—Ç–µ—Ä–∞–ø–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –±–∞–ª–ª–æ–Ω–∞
                </Text>

                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ */}
                <View style={styles.infoCard}>
                    <Text style={styles.infoCardTitle}>üí° –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</Text>
                    <Text style={styles.infoCardText}>
                        –†–∞—Å—á–µ—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –æ–±—ä–µ–º–µ –±–∞–ª–ª–æ–Ω–∞, –¥–∞–≤–ª–µ–Ω–∏–∏ –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–æ—Ç–æ–∫–∞ –∫–∏—Å–ª–æ—Ä–æ–¥–∞
                    </Text>
                </View>

                {/* –§–æ—Ä–º–∞ –≤–≤–æ–¥–∞ */}
                <View style={styles.formContainer}>
                    {/* –û–±—ä–µ–º –±–∞–ª–ª–æ–Ω–∞ */}
                    <View style={styles.inputGroup}>
                        <Text style={styles.inputLabel}>üìè –û–±—ä–µ–º –±–∞–ª–ª–æ–Ω–∞ –∫–∏—Å–ª–æ—Ä–æ–¥–∞</Text>
                        <TextInput
                            style={styles.inputField}
                            value={volume}
                            onChangeText={(text) => setVolume(text)}
                            keyboardType="numeric"
                            placeholder="–í–≤–µ–¥–∏—Ç–µ –æ–±—ä–µ–º –≤ –ª–∏—Ç—Ä–∞—Ö"
                            placeholderTextColor="#999"
                        />
                    </View>

                    {/* –ü–æ–∫–∞–∑–∞–Ω–∏–µ –º–∞–Ω–æ–º–µ—Ç—Ä–∞ */}
                    <View style={styles.inputGroup}>
                        <Text style={styles.inputLabel}>üìä –ü–æ–∫–∞–∑–∞–Ω–∏–µ –º–∞–Ω–æ–º–µ—Ç—Ä–∞</Text>
                        <View style={styles.pressureInputContainer}>
                            <TextInput
                                style={styles.inputField}
                                value={pressure}
                                onChangeText={(text) => setPressure(text)}
                                keyboardType="numeric"
                                placeholder="–í–≤–µ–¥–∏—Ç–µ –¥–∞–≤–ª–µ–Ω–∏–µ"
                                placeholderTextColor="#999"
                            />
                            <TouchableOpacity
                                style={[
                                    styles.unitButton,
                                    selectedUnit === 'ATM' && styles.unitButtonActive
                                ]}
                                onPress={() =>
                                    setSelectedUnit(selectedUnit === 'ATM' ? 'MPa' : 'ATM')
                                }
                            >
                                <Text style={[
                                    styles.unitButtonText,
                                    selectedUnit === 'ATM' && styles.unitButtonTextActive
                                ]}>
                                    {selectedUnit}
                                </Text>
                            </TouchableOpacity>
                        </View>
                    </View>

                    {/* –°–∫–æ—Ä–æ—Å—Ç—å –ø–æ—Ç–æ–∫–∞ */}
                    <View style={styles.inputGroup}>
                        <Text style={styles.inputLabel}>üí® –°–∫–æ—Ä–æ—Å—Ç—å –ø–æ—Ç–æ–∫–∞</Text>
                        <TextInput
                            style={styles.inputField}
                            value={flowRate}
                            onChangeText={(text) => setFlowRate(text)}
                            keyboardType="numeric"
                            placeholder="–õ–∏—Ç—Ä—ã –≤ –º–∏–Ω—É—Ç—É"
                            placeholderTextColor="#999"
                        />
                    </View>
                </View>

                {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
                <View style={styles.actionButtons}>
                    <TouchableOpacity
                        style={styles.calculateButton}
                        onPress={calculateTime}
                    >
                        <Text style={styles.calculateButtonText}>üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å</Text>
                    </TouchableOpacity>
                    <TouchableOpacity
                        style={styles.resetButton}
                        onPress={resetFields}
                    >
                        <Text style={styles.resetButtonText}>üîÑ –°–±—Ä–æ—Å–∏—Ç—å</Text>
                    </TouchableOpacity>
                </View>

                {/* –†–µ–∑—É–ª—å—Ç–∞—Ç */}
                {result !== null && (
                    <View style={styles.resultCard}>
                        <Text style={styles.resultTitle}>‚è±Ô∏è –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞</Text>
                        <Text style={styles.resultValue}>{result} –º–∏–Ω—É—Ç</Text>
                        <Text style={styles.resultDescription}>
                            –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–π –∏–Ω–≥–∞–ª—è—Ü–∏–∏ –∫–∏—Å–ª–æ—Ä–æ–¥–∞
                        </Text>
                    </View>
                )}

                {/* –§–æ—Ä–º—É–ª—ã —Ä–∞—Å—á–µ—Ç–∞ */}
                <View style={styles.formulasSection}>
                    <Text style={styles.formulasTitle}>üìã –§–æ—Ä–º—É–ª—ã —Ä–∞—Å—á–µ—Ç–∞</Text>

                    <View style={styles.formulaCard}>
                        <Text style={styles.formulaTitle}>–í –º–µ–≥–∞–ø–∞—Å–∫–∞–ª—è—Ö (MPa):</Text>
                        <Text style={styles.formulaText}>
                            –û–±—ä–µ–º √ó 10 √ó –î–∞–≤–ª–µ–Ω–∏–µ √∑ –°–∫–æ—Ä–æ—Å—Ç—å –ø–æ—Ç–æ–∫–∞
                        </Text>
                    </View>

                    <View style={styles.formulaCard}>
                        <Text style={styles.formulaTitle}>–í –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞—Ö (ATM):</Text>
                        <Text style={styles.formulaText}>
                            –û–±—ä–µ–º √ó –î–∞–≤–ª–µ–Ω–∏–µ √∑ –°–∫–æ—Ä–æ—Å—Ç—å –ø–æ—Ç–æ–∫–∞
                        </Text>
                    </View>
                </View>

                {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ */}
                <View style={styles.warningCard}>
                    <Text style={styles.warningText}>
                        ‚ö†Ô∏è –£—á–∏—Ç—ã–≤–∞–π—Ç–µ –∑–∞–ø–∞—Å –∫–∏—Å–ª–æ—Ä–æ–¥–∞ –¥–ª—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π.{'\n'}
                        –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏–º–µ—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –±–∞–ª–ª–æ–Ω.
                    </Text>
                </View>
            </ScrollView>
        </SafeAreaView>
    );
};


export default Calc_max_time_o2;
