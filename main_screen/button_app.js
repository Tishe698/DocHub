// ButtonApp.jsx ‚Äî –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ DocHub (Expo, Android, 2025)
import React from "react";
import {
  View,
  Text,
  SafeAreaView,
  FlatList,
  TouchableOpacity,
  ImageBackground,
  StyleSheet,
  useWindowDimensions,
  PixelRatio,
  Platform,
  StatusBar,
} from "react-native";

// ====== –î–ê–ù–ù–´–ï –ö–ê–†–¢–û–ß–ï–ö (–∏–∫–æ–Ω–∫–∏ –æ—Å—Ç–∞—é—Ç—Å—è –∏–∑ —Ç–≤–æ–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞) ======
const CARDS = [
  {
    screenName: "–†–∞—Å—á–µ—Ç –ª–µ–∫–∞—Ä—Å—Ç–≤",
    icon: require("./Icon1.png"),
    title: "üíä –†–∞—Å—á—ë—Ç –ª–µ–∫–∞—Ä—Å—Ç–≤",
    description: "–î–æ–∑–∏—Ä–æ–≤–∫–∏ –∏ –æ–±—ä—ë–º—ã",
    a11y: "–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞—Å—á—ë—Ç—É –ª–µ–∫–∞—Ä—Å—Ç–≤",
  },
  {
    screenName: "Tabnav",
    icon: require("./Icon2.png"),
    title: "ü´Å –¢—Ä—É–±–∫–∏",
    description: "–†–∞–∑–º–µ—Ä –∏ –≥–ª—É–±–∏–Ω–∞ –≠–¢–¢",
    a11y: "–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞–∑–¥–µ–ª—É —Ç—Ä—É–±–æ–∫",
  },
  {
    screenName: "CalcShockIndexScreen",
    icon: require("./icon3.png"),
    title: "‚ù§Ô∏è –®–æ–∫–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å",
    description: "–ò–Ω–¥–µ–∫—Å –ê–ª—å–≥–æ–≤–µ—Ä–∞",
    a11y: "–ü–µ—Ä–µ–π—Ç–∏ –∫ —à–æ–∫–æ–≤–æ–º—É –∏–Ω–¥–µ–∫—Å—É",
  },
  {
    screenName: "Date_pregnancy",
    icon: require("./icon4.png"),
    title: "ü§∞ –ë–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å",
    description: "–†–∞—Å—á—ë—Ç —Å—Ä–æ–∫–∞",
    a11y: "–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞—Å—á—ë—Ç—É —Å—Ä–æ–∫–∞ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏",
  },
  {
    screenName: "Tabnav_oxy",
    icon: require("./Icon7.png"),
    title: "ü´Å –ö–∏—Å–ª–æ—Ä–æ–¥",
    description: "–ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ O‚ÇÇ",
    a11y: "–ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–∏—Å–ª–æ—Ä–æ–¥–Ω—ã–º —Ä–∞—Å—á—ë—Ç–∞–º",
  },
  {
    screenName: "MKBScreen",
    icon: require("./Icon6.png"),
    title: "üìã –ú–ö–ë-10",
    description: "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –¥–∏–∞–≥–Ω–æ–∑–æ–≤",
    a11y: "–ü–µ—Ä–µ–π—Ç–∏ –∫ –ú–ö–ë-10",
  },
  {
    screenName: "PediatricNormsScreen",
    icon: require("./Icon5.png"),
    title: "üë∂ –ü–µ–¥–∏–∞—Ç—Ä–∏—è",
    description: "–§–∏–∑–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –Ω–æ—Ä–º—ã",
    a11y: "–ü–µ—Ä–µ–π—Ç–∏ –∫ –Ω–æ—Ä–º–∞–º –≤ –ø–µ–¥–∏–∞—Ç—Ä–∏–∏",
  },
  {
    screenName: "BloodGroupScreen",
    icon: require("../assets/Icon_10.jpeg"),
    title: "ü©∏ –ì—Ä—É–ø–ø–∞ –∫—Ä–æ–≤–∏",
    description: "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã",
    a11y: "–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—é –≥—Ä—É–ø–ø—ã –∫—Ä–æ–≤–∏",
  },
  {
    screenName: "GCScreen",
    icon: require("../assets/11.jpeg"),
    title: "üß† –®–∫–∞–ª–∞ –ì–ª–∞–∑–≥–æ",
    description: "–û—Ü–µ–Ω–∫–∞ —Å–æ–∑–Ω–∞–Ω–∏—è",
    a11y: "–ü–µ—Ä–µ–π—Ç–∏ –∫ —à–∫–∞–ª–µ –ì–ª–∞–∑–≥–æ",
  },
  {
    screenName: "GenevaScoreScreen",
    icon: require("../assets/12.jpeg"),
    title: "ü´Å –®–∫–∞–ª–∞ –¢–≠–õ–ê",
    description: "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –¢–≠–õ–ê",
    a11y: "–ü–µ—Ä–µ–π—Ç–∏ –∫ —à–∫–∞–ª–µ –¢–≠–õ–ê",
  },
  {
    screenName: "SHOKSScreen",
    icon: require("../assets/13.jpeg"),
    title: "‚ù§Ô∏è –®–û–ö–°",
    description: "–°–∏–º–ø—Ç–æ–º–∞—Ç–∏–∫–∞ –°–ù",
    a11y: "–ü–µ—Ä–µ–π—Ç–∏ –∫ —à–∫–∞–ª–µ –®–û–ö–°",
  },
  {
    screenName: "NorepinephrineScreen",
    icon: require("../assets/14.jpeg"),
    title: "üíâ –ù–æ—Ä–∞–¥—Ä–µ–Ω–∞–ª–∏–Ω",
    description: "–°–∫–æ—Ä–æ—Å—Ç—å –∏–Ω—Ñ—É–∑–∏–∏",
    a11y: "–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞—Å—á—ë—Ç—É –Ω–æ—Ä–∞–¥—Ä–µ–Ω–∞–ª–∏–Ω–∞",
  },
];

// ====== –¶–í–ï–¢–ê/–ö–û–ù–°–¢–ê–ù–¢–´ ======
const COLORS = {
  pageBg: "#EDF2F7",            // —Å–≤–µ—Ç–ª—ã–π —Ñ–æ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  heroBg: "#0F172A",            // —Ç—ë–º–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —à–∞–ø–∫–∏
  heroText: "#E2E8F0",
  textPrimary: "#0B1220",
  textSecondary: "#475569",
  chipBg: "#111827",
  chipText: "#E5E7EB",
  cardOverlay: "rgba(0,0,0,0.32)",
  white: "#FFFFFF",
  brand: "#2563EB",
};

const GUTTER = 12; // —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
const RADIUS = 18;

// ====== –ö–ê–†–¢–û–ß–ö–ê ======
const GridCard = ({ item, onPress }) => {
  return (
    <TouchableOpacity
      activeOpacity={0.9}
      style={styles.card}
      onPress={() => onPress(item.screenName)}
      accessibilityRole="button"
      accessibilityLabel={item.a11y}
    >
      <ImageBackground source={item.icon} style={styles.cardBg} imageStyle={styles.cardBgImage}>
        <View style={styles.overlay} />
        <View style={styles.cardContent}>
          <Text style={styles.cardTitle} numberOfLines={2}>
            {item.title}
          </Text>
          <Text style={styles.cardDesc} numberOfLines={1}>
            {item.description}
          </Text>
        </View>
      </ImageBackground>
    </TouchableOpacity>
  );
};

// ====== –ì–õ–ê–í–ù–ê–Ø ======
const ButtonApp = ({ navigation }) => {
  const { width } = useWindowDimensions();

  // –û–¥–∏–Ω —Å—Ç–æ–ª–±–µ—Ü –Ω–∞ —É–∑–∫–∏—Ö —ç–∫—Ä–∞–Ω–∞—Ö (–∏–ª–∏ –ø—Ä–∏ –∫—Ä—É–ø–Ω–æ–º –º–∞—Å—à—Ç–∞–±–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞)
  const fontScale = PixelRatio.getFontScale?.() || 1;
  const oneColumn = width <= 450 || fontScale >= 1.3;
  const numColumns = oneColumn ? 1 : 2;

  const onPress = (screen) => navigation.navigate(screen);

  const Header = React.useMemo(
    () => (
      <View style={styles.headerWrap}>
        <View style={styles.hero}>
          <View style={styles.brandRow}>
            <View style={styles.brandChip}>
              <Text style={styles.brandDot}>‚úö</Text>
              <Text style={styles.brandChipText}>DocHub</Text>
            </View>
          </View>

          <Text style={styles.heroTitle} numberOfLines={2}>
            –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ä–∞—Å—á—ë—Ç—ã
          </Text>
          <Text style={styles.heroSubtitle} numberOfLines={2}>
            –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –≤—Ä–∞—á–∞ –∏ —Ñ–µ–ª—å–¥—à–µ—Ä–∞
          </Text>
        </View>
      </View>
    ),
    []
  );

  return (
    <>
      {/* –°–∫—Ä—ã–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π —Å—Ç–∞—Ç—É—Å-–±–∞—Ä */}
      <StatusBar
        hidden={true}
        translucent={true}
        backgroundColor="transparent"
        barStyle="light-content"
        animated={true}
      />

      <SafeAreaView style={styles.safe}>
        <FlatList
          data={CARDS}
          renderItem={({ item }) => <GridCard item={item} onPress={onPress} />}
          keyExtractor={(_, i) => `card-${i}`}
          contentContainerStyle={styles.listContent}
          ListHeaderComponent={Header}
          numColumns={numColumns}
          key={numColumns} // –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å layout –ø—Ä–∏ —Å–º–µ–Ω–µ —Å—Ç–æ–ª–±—Ü–æ–≤
          showsVerticalScrollIndicator={false}
          columnWrapperStyle={!oneColumn ? styles.columnWrapper : undefined}
          initialNumToRender={6}
          windowSize={8}
        />
      </SafeAreaView>
    </>
  );
};

export default ButtonApp;

// ====== –°–¢–ò–õ–ò ======
const elevation = (e = 2) =>
  Platform.select({
    android: { elevation: e },
    ios: {
      shadowColor: "#000",
      shadowOpacity: 0.08,
      shadowRadius: e * 2,
      shadowOffset: { width: 0, height: e },
    },
    default: {},
  });

const styles = StyleSheet.create({
  safe: {
    flex: 1,
    backgroundColor: COLORS.pageBg,
    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É –¥–ª—è –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏ —Å–∫—Ä—ã—Ç–æ–≥–æ —Å—Ç–∞—Ç—É—Å-–±–∞—Ä–∞
    paddingTop: Platform.OS === 'android' ? 32 : 0, // 32dp –Ω–∞ Android –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ç—Å—Ç—É–ø–∞
  },

  listContent: {
    paddingTop: 16, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É
    paddingBottom: 24,
    paddingHorizontal: 16,
  },

  // ===== Header / hero =====
  headerWrap: {
    paddingHorizontal: 16,
    marginBottom: 12,
  },
  hero: {
    backgroundColor: COLORS.heroBg,
    borderRadius: 22,
    padding: 18,
    ...elevation(4),
  },
  brandRow: {
    flexDirection: "row",
    justifyContent: "flex-start",
    marginBottom: 8,
  },
  brandChip: {
    flexDirection: "row",
    alignItems: "center",
    paddingVertical: 6,
    paddingHorizontal: 12,
    borderRadius: 999,
    backgroundColor: COLORS.chipBg,
    borderWidth: 1,
    borderColor: "rgba(255,255,255,0.06)",
  },
  brandDot: { color: "#A78BFA", marginRight: 6, fontSize: 14 },
  brandChipText: { color: COLORS.chipText, fontWeight: "700", fontSize: 13 },

  heroTitle: {
    color: COLORS.white,
    fontSize: 22,
    fontWeight: "800",
    marginTop: 6,
  },
  heroSubtitle: {
    color: COLORS.heroText,
    fontSize: 14,
    marginTop: 6,
  },

  statsRow: {
    flexDirection: "row",
    flexWrap: "wrap",
    marginTop: 14,
  },
  statBox: {
    flexGrow: 1,
    minWidth: 96,
    maxWidth: "33.33%",
    borderRadius: 14,
    paddingVertical: 12,
    paddingHorizontal: 12,
    borderWidth: 1,
    borderColor: "rgba(255,255,255,0.06)",
    marginRight: 10,
    marginTop: 10,
  },
  statEmoji: { fontSize: 16, marginBottom: 6, color: COLORS.white },
  statLabel: { color: "#BBD0FF", fontSize: 12, fontWeight: "600" },
  statValue: { color: COLORS.white, fontSize: 14, fontWeight: "800" },

  // ===== Grid =====
  columnWrapper: {
    // –∫–æ–º–ø–µ–Ω—Å–∏—Ä—É–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –º–∞—Ä–≥–∏–Ω—ã –∫–∞—Ä—Ç–æ—á–µ–∫
    marginHorizontal: -GUTTER / 2,
    paddingHorizontal: 16,
  },

  card: {
    flex: 1,
    height: 170,
    borderRadius: RADIUS,
    overflow: "hidden",
    backgroundColor: COLORS.white,
    marginHorizontal: GUTTER / 2, // —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
    marginBottom: 16,             // —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Ä—è–¥–∞–º–∏
    ...elevation(3),
  },
  cardBg: { flex: 1 },
  cardBgImage: { resizeMode: "cover" },
  overlay: {
    ...StyleSheet.absoluteFillObject,
    backgroundColor: COLORS.cardOverlay,
  },
  cardContent: {
    position: "absolute",
    left: 12,
    right: 12,
    bottom: 12,
  },
  cardTitle: {
    color: COLORS.white,
    fontSize: 16,
    fontWeight: "800",
    marginBottom: 2,
  },
  cardDesc: {
    color: "#E2E8F0",
    fontSize: 13,
    fontWeight: "600",
  },

  // ===== Footer =====
  footer: {
    position: "absolute",
    left: 16,
    right: 16,
    bottom: 12,
    backgroundColor: COLORS.white,
    borderRadius: 14,
    padding: 12,
    borderWidth: 1,
    borderColor: "#E5E7EB",
    ...elevation(2),
  },
  footerText: {
    color: COLORS.textSecondary,
    fontSize: 12,
    textAlign: "center",
  },
});
